name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
      fail-fast: false

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-cov
    
    - name: Create .env file for tests
      run: |
        echo "TRANSPARENCIA_API_TOKEN=${{ secrets.TRANSPARENCIA_API_TOKEN || 'test_token' }}" >> .env
        echo "TRANSPARENCIA_API_EMAIL=${{ secrets.TRANSPARENCIA_API_EMAIL || 'test@email.com' }}" >> .env
        echo "API_RATE_LIMIT=30" >> .env
        echo "API_TIMEOUT=60" >> .env
        echo "CACHE_ENABLED=true" >> .env
        echo "CACHE_TTL=3600" >> .env
        echo "LOG_LEVEL=INFO" >> .env
    
    - name: Run linting
      continue-on-error: true
      run: |
        # Format code with black (for now, just check)
        black src/ tests/ --diff || true
        
        # Check import sorting with isort
        isort src/ tests/ --diff || true
        
        # Run flake8 linting (informational only)
        flake8 src/ tests/ || true
    
    - name: Run tests with coverage
      run: |
        # Run tests without API calls for CI
        pytest tests/test_client.py -v --cov=src --cov-report=xml --cov-report=html -k "not test_connection"
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.9'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false